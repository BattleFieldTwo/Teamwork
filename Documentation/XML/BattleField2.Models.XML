<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BattleField2.Models</name>
    </assembly>
    <members>
        <member name="T:BattleField2.Models.Cells.CellFactory">
            <summary>
            CellFactory class uses a Singleton implemented instance to
            create Cell objects with appropriate CellType enumeration type
            based on given input. 
            </summary>
        </member>
        <member name="M:BattleField2.Models.Cells.CellFactory.Instance">
            <summary>
            CellFactory method checks if their is an already created
            CellFactory instance and returns it. If the instance is 
            already create it returns it anyway.
            </summary>
            <returns>The existing CellFactory instance.</returns>
        </member>
        <member name="M:BattleField2.Models.Cells.CellFactory.GetCell(BattleField2.Models.Cells.CellType)">
            <summary>
            GetCell method gets a valid enumeration CellType and returns a Cell Object
            with the appropriate CellType.
            </summary>
            <param name="type">A valid CellType eunmeration type.</param>
            <returns>A cell object with the appropriate CellType set by the given parameter.</returns>
        </member>
        <member name="T:BattleField2.Models.Cells.CellType">
            <summary>
            Enumeration that holds the two basic CellType types.
            The Empty cell type and the Detonated cell type.
            </summary>
        </member>
        <member name="F:BattleField2.Models.Cells.CellType.Empty">
            <summary>
            Enumeration value representing the Empty cell type.
            </summary>
        </member>
        <member name="F:BattleField2.Models.Cells.CellType.Detonated">
            <summary>
            Enumeration value representing the Detonated cell type.
            </summary>
        </member>
        <member name="T:BattleField2.Models.Cells.Cell">
            <summary>
            The Cell class is an abstract class to be inherited 
            by the concrete Cells 
            </summary>
        </member>
        <member name="P:BattleField2.Models.Cells.Cell.StringRepresentation">
            <summary>
            Abstract method to be inherited by the concrete Cells
            to output their given in-game representations.
            </summary>
        </member>
        <member name="T:BattleField2.Models.Coordinates.Coordinates">
            <summary>
            Coordinates struct defines and handles the game field coordinates.
            </summary>
        </member>
        <member name="F:BattleField2.Models.Coordinates.Coordinates.Row">
            <summary>
            Readonly properties representing the Row and Column in the game field.
            </summary>
        </member>
        <member name="F:BattleField2.Models.Coordinates.Coordinates.Col">
            <summary>
            Readonly properties representing the Row and Column in the game field.
            </summary>
        </member>
        <member name="M:BattleField2.Models.Coordinates.Coordinates.#ctor(System.Int32,System.Int32)">
            <summary>
            Coordinates method that sets the current coordinates by given properties.
            </summary>
            <param name="row">Row coordinate parameter.</param>
            <param name="col">Column coordinate parameter.</param>
        </member>
        <member name="M:BattleField2.Models.Coordinates.Coordinates.ToString">
            <summary>
            Overwritten ToString() method for the string representation
            of the game field coordinates. 
            </summary>
            <returns>Returns the string representation of the given game field coordinates.</returns>
        </member>
        <member name="T:BattleField2.Models.Player.HighScore">
            <summary>
            HighScore class handles the procedures involving the storage of the Players scores
            and their listing.
            </summary>
        </member>
        <member name="M:BattleField2.Models.Player.HighScore.#ctor">
            <summary>
            Method that reads the high score results from file.
            </summary>
        </member>
        <member name="M:BattleField2.Models.Player.HighScore.ListHighScore">
            <summary>
            Method that first sorts the current content of the highScoreList
            and then creates and formats a StringBuilder object to be returned as a string.
            </summary>
            <returns>Returns a string that represents a list of the top Player results.</returns>
        </member>
        <member name="M:BattleField2.Models.Player.HighScore.SaveHighScore(BattleField2.Models.Player.Player)">
            <summary>
            Method that gets the current player score at the end of the game
            and adds it to the highScoreList.
            </summary>
            <param name="currentPlayer">Player object that represents the current player.</param>
        </member>
    </members>
</doc>
