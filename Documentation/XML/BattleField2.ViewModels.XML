<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BattleField2.ViewModels</name>
    </assembly>
    <members>
        <member name="T:BattleField2.Renderers.ColorConfig">
            <summary>
            This class holds some configuration details related to the color rendering in the application.
            </summary>
        </member>
        <member name="M:BattleField2.Renderers.ColorConfig.SetColor(System.String)">
            <summary>
            Method that sets the Console color based on given string.
            </summary>
            <param name="color">String value representing a Color name to be parsed.</param>
            <returns>New object of type ConsoleColor to be implemented as a new color setting by the console.</returns>
        </member>
        <member name="T:BattleField2.Renderers.ConsoleGameRenderer">
            <summary>
            ConsoleGameRenderer class implements the IGameRenderer interface and
            provides most of the main methods that we use inside the GameEngine class.
            </summary>
        </member>
        <member name="T:BattleField2.Renderers.IGameRenderer">
            <summary>
            IGameRenderer interface to be implemented and inherited.
            </summary>
        </member>
        <member name="M:BattleField2.Renderers.IGameRenderer.DisplayMessage(System.String)">
            <summary>
            Method to handle the incoming messages to display.
            </summary>
            <param name="message">String input to be handled</param>
        </member>
        <member name="M:BattleField2.Renderers.IGameRenderer.DrawField(BattleField2.Models.Cells.Cell[0:,0:])">
            <summary>
            Method that draws a gamefield based on given input array of cells.
            </summary>
            <param name="fieldPositions">Valid field positioning cells.</param>
        </member>
        <member name="M:BattleField2.Renderers.IGameRenderer.Clear">
            <summary>
            Method that clears the input on the screen.
            </summary>
        </member>
        <member name="M:BattleField2.Renderers.IGameRenderer.EnterCommand">
            <summary>
            Method that accepts a given in-game command.
            </summary>
            <returns>Returns the result of the command input.</returns>
        </member>
        <member name="M:BattleField2.Renderers.IGameRenderer.Wait">
            <summary>
            Method that is used to hold the execution of the application.
            </summary>
        </member>
        <member name="M:BattleField2.Renderers.IGameRenderer.SetSize(System.Int32,System.Int32)">
            <summary>
            Method that sets the size of the game window.
            </summary>
            <param name="width">Current window width.</param>
            <param name="height">Current window height.</param>
        </member>
        <member name="M:BattleField2.Renderers.ConsoleGameRenderer.DisplayMessage(System.String)">
            <summary>
            Method that gets a string and prints it as a message to the Console.
            </summary>
            <param name="message">Message to be printed on the Console.</param>
        </member>
        <member name="M:BattleField2.Renderers.ConsoleGameRenderer.Clear">
            <summary>
            Method that clears the Console screen.
            </summary>
        </member>
        <member name="M:BattleField2.Renderers.ConsoleGameRenderer.EnterCommand">
            <summary>
            Method that waits for a user input as a command and returns that command.
            </summary>
            <returns>The command that was inputed.</returns>
        </member>
        <member name="M:BattleField2.Renderers.ConsoleGameRenderer.Wait">
            <summary>
            Method that is used to hold the execution of the application.
            </summary>
        </member>
        <member name="M:BattleField2.Renderers.ConsoleGameRenderer.DrawCell(System.String)">
            <summary>
            Method that draw a given cell from the game field.
            We get the cell content as an input parameter and then evaluate what to print
            and with what color based on that content.
            </summary>
            <param name="cellContent">Cell content to be printed.</param>
        </member>
        <member name="M:BattleField2.Renderers.ConsoleGameRenderer.DrawField(BattleField2.Models.Cells.Cell[0:,0:])">
            <summary>
            Method that draws the whole game field.
            </summary>
            <param name="fieldPositions">Multi-dimensional array of Cell Objects that will build the game field.</param>
        </member>
        <member name="M:BattleField2.Renderers.ConsoleGameRenderer.SetSize(System.Int32,System.Int32)">
            <summary>
            Method that is used to set the size of the game field.
            NOTE: In case of unsupported width or height the game field
            size will be set to the maximum size for the current system
            Console.
            </summary>
            <param name="width">Game field width.</param>
            <param name="height">Game field height.</param>
        </member>
        <member name="P:BattleField2.Renderers.ConsoleGameRenderer.Instance">
            <summary>
            ConsoleGameRenderer that checks for an existing class instance 
            and creates it if missing. Returns the current instance in both cases.
            </summary>
        </member>
        <member name="T:BattleField2.ViewModels.Contracts.NamespaceDoc">
            <summary>
            Namespace that holds the Renderers and VIewModels used during the game.
            </summary>
        </member>
        <member name="T:BattleField2.ViewModels.Contracts.IViewModel">
            <summary>
            IViewModel interface to be inherited by a concrete ViewModel.
            </summary>
        </member>
        <member name="M:BattleField2.ViewModels.Contracts.IViewModel.DisplayWelcomeMessage(System.String)">
            <summary>
            Method to display the in-game messages.
            </summary>
            <param name="welcomeMessage">Message to be handled.</param>
        </member>
        <member name="M:BattleField2.ViewModels.Contracts.IViewModel.GetFieldSize(System.String)">
            <summary>
            Method to get the field size.
            </summary>
            <param name="inviteToGiveSizeMessage"></param>
            <returns>Returns field size.</returns>
        </member>
        <member name="M:BattleField2.ViewModels.Contracts.IViewModel.DrawField(BattleField2.Models.Field.Field)">
            <summary>
            Method to draw the game field.
            </summary>
            <param name="currentBattleField">Field object to be drawn.</param>
        </member>
        <member name="M:BattleField2.ViewModels.Contracts.IViewModel.GetInputCoordinates(System.String)">
            <summary>
            Method to get input coordinates.
            </summary>
            <param name="inviteToEnterCoordinatesMessage"></param>
            <returns>Returns the new coordinates.</returns>
        </member>
        <member name="M:BattleField2.ViewModels.Contracts.IViewModel.NotifyForInvalidMove(System.String)">
            <summary>
            Method that notifies player on invalid move.
            </summary>
            <param name="invalidMoveNotificationMessage">Message to notify for invalid string.</param>
        </member>
        <member name="M:BattleField2.ViewModels.Contracts.IViewModel.GameOver(System.String,System.Int32)">
            <summary>
            Method that gets called at the end of the game.
            </summary>
            <param name="gameOverMessage"></param>
            <param name="detonatedMines"></param>
        </member>
        <member name="M:BattleField2.ViewModels.Contracts.IViewModel.GiveMinesCount(System.Int32)">
            <summary>
            Method that gives the mines count.
            </summary>
            <param name="count"></param>
        </member>
    </members>
</doc>
